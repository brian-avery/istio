// Code generated by xns-informer-gen. DO NOT EDIT.

package v1alpha1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "sigs.k8s.io/service-apis/apis/v1alpha1"
	informers "sigs.k8s.io/service-apis/pkg/client/informers/externalversions/apis/v1alpha1"
	listers "sigs.k8s.io/service-apis/pkg/client/listers/apis/v1alpha1"
)

type backendPolicyInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.BackendPolicyInformer = &backendPolicyInformer{}

func NewBackendPolicyInformer(f xnsinformers.SharedInformerFactory) informers.BackendPolicyInformer {
	resource := v1alpha1.SchemeGroupVersion.WithResource("backendpolicies")
	converter := xnsinformers.NewListWatchConverter(
		f.GetScheme(),
		&v1alpha1.BackendPolicy{},
		&v1alpha1.BackendPolicyList{},
	)

	informer := f.ForResource(resource, xnsinformers.ResourceOptions{
		ClusterScoped:      false,
		ListWatchConverter: converter,
	})

	return &backendPolicyInformer{informer: informer.Informer()}
}

func (i *backendPolicyInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *backendPolicyInformer) Lister() listers.BackendPolicyLister {
	return listers.NewBackendPolicyLister(i.informer.GetIndexer())
}
