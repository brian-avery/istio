// Code generated by xns-informer-gen. DO NOT EDIT.

package v1alpha1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "sigs.k8s.io/service-apis/apis/v1alpha1"
	informers "sigs.k8s.io/service-apis/pkg/client/informers/externalversions/apis/v1alpha1"
	listers "sigs.k8s.io/service-apis/pkg/client/listers/apis/v1alpha1"
)

type uDPRouteInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.UDPRouteInformer = &uDPRouteInformer{}

func NewUDPRouteInformer(f xnsinformers.SharedInformerFactory) informers.UDPRouteInformer {
	resource := v1alpha1.SchemeGroupVersion.WithResource("udproutes")
	converter := xnsinformers.NewListWatchConverter(
		f.GetScheme(),
		&v1alpha1.UDPRoute{},
		&v1alpha1.UDPRouteList{},
	)

	informer := f.ForResource(resource, xnsinformers.ResourceOptions{
		ClusterScoped:      false,
		ListWatchConverter: converter,
	})

	return &uDPRouteInformer{informer: informer.Informer()}
}

func (i *uDPRouteInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *uDPRouteInformer) Lister() listers.UDPRouteLister {
	return listers.NewUDPRouteLister(i.informer.GetIndexer())
}
